name: Upload to Azure Blob Storage

on:
  push:
    branches: [main]

jobs:
  upload:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Ensure all files are checked out

      - name: Verify git.json existence
        run: |
          if [ ! -f ./git.json ]; then
            echo "::error::git.json missing from repository root!"
            exit 1
          fi

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Azure SDK
        run: pip install azure-storage-blob==12.19.0 # Specific compatible version

      - name: Network Diagnostics
        run: |
          ping -c 3 blob.core.windows.net
          nslookup blob.core.windows.net

      - name: Upload to Azure
        env:
          AZURE_STORAGE_ACCOUNT_NAME: ${{ secrets.AZURE_STORAGE_ACCOUNT }}
          AZURE_STORAGE_ACCOUNT_KEY: ${{ secrets.AZURE_STORAGE_KEY }}
        run: |
          python <<EOF
          from azure.storage.blob import BlobServiceClient
          from azure.core.exceptions import AzureError
          import os

          account_name = os.getenv('AZURE_STORAGE_ACCOUNT_NAME')
          account_key = os.getenv('AZURE_STORAGE_ACCOUNT_KEY')

          print(f"Using storage account: {account_name}")  # Verify account name

          try:
              # Verify credentials format
              if not account_name or not account_key:
                  raise ValueError("Missing storage credentials")
              
              # Create client with explicit timeout
              conn_str = f"DefaultEndpointsProtocol=https;AccountName={account_name};AccountKey={account_key};EndpointSuffix=core.windows.net"
              client = BlobServiceClient.from_connection_string(
                  conn_str,
                  connection_timeout=30,
                  read_timeout=40
              )
              
              # Force DNS resolution test
              client.get_service_properties()
              print("Connection to Azure successful")
              
              # Upload logic here...
              
          except AzureError as e:
              print(f"Azure Error: {e}")
              exit(1)
          EOF
